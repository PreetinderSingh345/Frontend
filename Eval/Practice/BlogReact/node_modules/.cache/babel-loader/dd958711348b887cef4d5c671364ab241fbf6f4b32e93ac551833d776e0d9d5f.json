{"ast":null,"code":"var _jsxFileName = \"/Users/preetinder_singh/Desktop/Work/Class/Frontend/Integrate/BlogReact/src/Components/Engagement/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Engagement.css';\nimport clappingImg from '../../assets/clapping.svg';\nimport blackHeartImg from '../../assets/heart-black.svg';\nimport redHeartImg from '../../assets/heart-red.svg';\nimport { UPDATE_CLAP, UPDATE_LIKE } from '../../constants/apiEndPoints';\nimport makeRequest from '../../utils/makeRequest/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Engagement(_ref) {\n  _s();\n  let {\n    id,\n    initialClapCount,\n    initialLiked\n  } = _ref;\n  const [liked, setLiked] = React.useState(initialLiked);\n  const [clapped, setClapped] = React.useState(false);\n  const [clapCount, setClapCount] = React.useState(initialClapCount);\n  async function handleClap() {\n    try {\n      await makeRequest(UPDATE_CLAP(id), {\n        claps: clapped ? clapCount - 1 : clapCount + 1\n      });\n      if (clapped) {\n        setClapCount(clapCount - 1);\n        setClapped(false);\n      } else {\n        setClapCount(clapCount + 1);\n        setClapped(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  async function handleLike() {\n    try {\n      await makeRequest(UPDATE_LIKE(id), {\n        liked: !liked\n      });\n      setLiked(!liked);\n    } catch (err) {\n      // do something with error\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clap-heart\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"clap-and-count\",\n      onClick: handleClap,\n      \"data-testid\": \"clap-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: clappingImg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: clapCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: liked ? redHeartImg : blackHeartImg,\n      alt: \"\",\n      onClick: handleLike,\n      \"data-testid\": \"like-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Engagement, \"MxXkO0BG9BxjwfLdNtd4eYXvLpI=\");\n_c = Engagement;\nEngagement.propTypes = {\n  id: PropTypes.number.isRequired,\n  initialClapCount: PropTypes.number.isRequired,\n  initialLiked: PropTypes.bool.isRequired\n};\nexport default Engagement;\nvar _c;\n$RefreshReg$(_c, \"Engagement\");","map":{"version":3,"names":["React","PropTypes","clappingImg","blackHeartImg","redHeartImg","UPDATE_CLAP","UPDATE_LIKE","makeRequest","Engagement","id","initialClapCount","initialLiked","liked","setLiked","useState","clapped","setClapped","clapCount","setClapCount","handleClap","claps","err","console","error","message","handleLike","propTypes","number","isRequired","bool"],"sources":["/Users/preetinder_singh/Desktop/Work/Class/Frontend/Integrate/BlogReact/src/Components/Engagement/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Engagement.css';\nimport clappingImg from '../../assets/clapping.svg';\nimport blackHeartImg from '../../assets/heart-black.svg';\nimport redHeartImg from '../../assets/heart-red.svg';\nimport { UPDATE_CLAP, UPDATE_LIKE } from '../../constants/apiEndPoints';\nimport makeRequest from '../../utils/makeRequest/index';\n\nfunction Engagement({ id, initialClapCount, initialLiked }) {\n  const [liked, setLiked] = React.useState(initialLiked);\n  const [clapped, setClapped] = React.useState(false);\n  const [clapCount, setClapCount] = React.useState(initialClapCount);\n\n  async function handleClap() {\n    try {\n      await makeRequest(UPDATE_CLAP(id), {\n        claps: clapped ? clapCount - 1 : clapCount + 1,\n      });\n\n      if (clapped) {\n        setClapCount(clapCount - 1);\n        setClapped(false);\n      } else {\n        setClapCount(clapCount + 1);\n        setClapped(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  async function handleLike() {\n    try {\n      await makeRequest(UPDATE_LIKE(id), {\n        liked: !liked,\n      });\n\n      setLiked(!liked);\n    } catch (err) {\n      // do something with error\n    }\n  }\n\n  return (\n    <div className=\"clap-heart\">\n      <span\n        className=\"clap-and-count\"\n        onClick={handleClap}\n        data-testid=\"clap-button\"\n      >\n        <img src={clappingImg} alt=\"\" />\n        <span>{clapCount}</span>\n      </span>\n\n      <img\n        src={liked ? redHeartImg : blackHeartImg}\n        alt=\"\"\n        onClick={handleLike}\n        data-testid=\"like-button\"\n      />\n    </div>\n  );\n}\n\nEngagement.propTypes = {\n  id: PropTypes.number.isRequired,\n  initialClapCount: PropTypes.number.isRequired,\n  initialLiked: PropTypes.bool.isRequired,\n};\n\nexport default Engagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,WAAW,EAAEC,WAAW,QAAQ,8BAA8B;AACvE,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,SAASC,UAAU,OAAyC;EAAA;EAAA,IAAxC;IAAEC,EAAE;IAAEC,gBAAgB;IAAEC;EAAa,CAAC;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAACH,YAAY,CAAC;EACtD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGlB,KAAK,CAACc,QAAQ,CAACJ,gBAAgB,CAAC;EAElE,eAAeS,UAAU,GAAG;IAC1B,IAAI;MACF,MAAMZ,WAAW,CAACF,WAAW,CAACI,EAAE,CAAC,EAAE;QACjCW,KAAK,EAAEL,OAAO,GAAGE,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG;MAC/C,CAAC,CAAC;MAEF,IAAIF,OAAO,EAAE;QACXG,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;QAC3BD,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLE,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;QAC3BD,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B;EACF;EAEA,eAAeC,UAAU,GAAG;IAC1B,IAAI;MACF,MAAMlB,WAAW,CAACD,WAAW,CAACG,EAAE,CAAC,EAAE;QACjCG,KAAK,EAAE,CAACA;MACV,CAAC,CAAC;MAEFC,QAAQ,CAAC,CAACD,KAAK,CAAC;IAClB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZ;IAAA;EAEJ;EAEA,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB;MACE,SAAS,EAAC,gBAAgB;MAC1B,OAAO,EAAEF,UAAW;MACpB,eAAY,aAAa;MAAA,wBAEzB;QAAK,GAAG,EAAEjB,WAAY;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAChC;QAAA,UAAOe;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,eAEP;MACE,GAAG,EAAEL,KAAK,GAAGR,WAAW,GAAGD,aAAc;MACzC,GAAG,EAAC,EAAE;MACN,OAAO,EAAEsB,UAAW;MACpB,eAAY;IAAa;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAtDQjB,UAAU;AAAA,KAAVA,UAAU;AAwDnBA,UAAU,CAACkB,SAAS,GAAG;EACrBjB,EAAE,EAAER,SAAS,CAAC0B,MAAM,CAACC,UAAU;EAC/BlB,gBAAgB,EAAET,SAAS,CAAC0B,MAAM,CAACC,UAAU;EAC7CjB,YAAY,EAAEV,SAAS,CAAC4B,IAAI,CAACD;AAC/B,CAAC;AAED,eAAepB,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}